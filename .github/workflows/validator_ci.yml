name: Run Validator QA

on:
  push:
    branches: [master, main]
  pull_request:

env:
  PYTHON_DEFAULT_VERSION: "3.11"

jobs:
  linter:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./validator
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
          cache: "pip"
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.6.x"
          enable-cache: true
      - name: Install dependencies
        run: python -m pip install --upgrade nox
      - name: Create dotenv file
        run: cp ./envs/dev/.env.template .env
      - name: Run linters
        run: nox -vs lint
  type_check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./validator
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
          cache: "pip"
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.6.x"
          enable-cache: true
      - name: Install dependencies
        run: python -m pip install --upgrade nox
      - name: Create dotenv file
        run: cp ./envs/dev/.env.template .env
      - name: Run mypy
        run: nox -vs type_check
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./validator
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
          cache: "pip"
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.6.x"
          enable-cache: true
      - name: Install dependencies
        run: python -m pip install --upgrade nox
      - name: Prepare environment
        run: ./setup-dev.sh
      - name: Run dockerized services
        run: docker compose up -d --wait
      - name: Run unit tests
        run: nox -vs test
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: "Validator test report"
          files: "validator/app/src/test-report.xml"
          fail_on: "nothing"
          comment_mode: "failures"
          check_run: true
      - name: Stop dockerized services
        if: success() || failure()
        run: docker compose down -v
