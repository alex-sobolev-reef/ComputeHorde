@startuml
actor Client
participant "Fallback Client"
box "Pod (Job Container)" #LightBlue
  participant Process
  participant "Proxy Server"
end box

Client -> "Fallback Client": Request streaming job
"Fallback Client" -> "Fallback Client": Generate client certificate

"Fallback Client" -> Process: Request process creation
activate Process
Process -> Process: Start job container\nInstall NGINX
"Fallback Client" -> Process: Upload client certificate (InlineInputVolume)
Process -> "Fallback Client": Container is ready

Process -> "Proxy Server": Generate server certificate\nStart proxy server (requires client cert)
activate "Proxy Server"
"Fallback Client" -> Process: Poll for server certificate (rsync)
Process -> "Fallback Client": Return server public certificate

"Fallback Client" -> Client: Return server address\nand public certificate

== Streaming Phase ==
loop Streaming until client finishes or job times out
  Client -> "Proxy Server": Request (signed with client cert)
  activate "Proxy Server"
  "Proxy Server" -> Process: Forward to unsafe HTTP app
  Process --> "Proxy Server": Response from app
  "Proxy Server" -> Client: Response (signed with server cert)
  deactivate "Proxy Server"
end

Process -> Client: Job finished
deactivate "Proxy Server"
deactivate Process

@enduml